security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
#                csrf_provider: form.csrf_provider
            logout:       true
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }

# OAUTH
#security:
#    encoders:
#        Brainstrap\OAuthBundle\Entity\User:
#            algorithm:        sha1
#            encode_as_base64: false
#            iterations:       1
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: ROLE_ADMIN
#
#    providers:
##        user_provider:
##            id: platform.user.provider
#
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false

#        oauth_authorize:
#            pattern:    ^/oauth/v2/auth
#            form_login:
#                provider: user_provider
#                check_path: brainstrap_oauth_login_check
#                login_path: brainstrap_oauth_auth_login
#            anonymous: true

#        api:
#            pattern:    ^/api
#            fos_oauth:  true
#            stateless:  true

#        oauth_token:
#            pattern:    ^/oauth/v2/token
#            security:   false

#    access_control:
#        - { path: ^/oauth/v2/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # You can omit this if /api can be accessed both authenticated and anonymously
#        - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }